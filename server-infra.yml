Description: >
  Udacity Project 2 /
  Ochieng Otieno

Parameters:
  EnvironmentName:
    Description: The environment name to be prefixed to resource names
    Type: String

  AMItoUse:
    Description: Server image id
    Type: String

Resources:
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http trafic to load balancer
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http trafic to our host and ssh from local
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AMItoUse
      InstanceType: t3.medium
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          echo "Web Server Up and Running!" > index.html
      SecurityGroups: 
        - !Ref WebServerSecurityGroup
      BlockDeviceMappings:
        - DeviceName: "/dev/sdb"
          Ebs:
            VolumeSize: "15"

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub ${EnvironmentName} AutoScalingGroup
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PRIV-NETS
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: "2"
      MaxSize: "4"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN2"
      SecurityGroups:
        - Ref: LBSecurityGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref WebAppLB
      Port: "80"
      Protocol: "HTTP"

  AppLBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: 
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:
  WebAppLBUrl:
    Description: LoadBalancer Public URL
    Value: !Join [ '', ['http://', !GetAtt WebAppLB.DNSName ] ]

  LoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref WebAppLB
